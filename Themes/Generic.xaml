<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrls="clr-namespace:WpfApp1.Components"
    xmlns:cvts="clr-namespace:WpfApp1.Converters"
    xmlns:viewModels="clr-namespace:WpfApp1.ViewModels"
    xmlns:views="clr-namespace:WpfApp1.Views">
    <DataTemplate DataType="{x:Type viewModels:DeviceViewModel}">
        <views:DevicesView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:AnalogViewModel}">
        <views:AnalogView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:DiscreteViewModel}">
        <views:DiscreteView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:PulseInViewModel}">
        <views:PulseInView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:PulseOutViewModel}">
        <views:PulseOutView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:GDICViewModel}">
        <views:GDIC3160View />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:LogViewModel}">
        <views:LogView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:MemoryViewModel}">
        <views:MemoryView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:NXPViewModel}">
        <views:NXPView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:PPAWLViewModel}">
        <views:PPAWLView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:SavinLogicViewModel}">
        <views:SavingLogicView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:SPIViewModel}">
        <views:SPIView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:NXPFlashViewModel}">
        <views:NXPFlashView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:ResolverViewModel}">
        <views:ResolverView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:LayoutViewModel}">
        <ctrls:Layout />
    </DataTemplate>

    <Style TargetType="{x:Type ctrls:Modal}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:Modal}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}" Visibility="{TemplateBinding IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Border
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            UseLayoutRounding="True">
                            <Grid>
                                <Grid.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=border}" />
                                </Grid.OpacityMask>
                                <Border
                                    x:Name="border"
                                    Background="White"
                                    CornerRadius="5" />
                                <ContentControl Content="{TemplateBinding Content}" />
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    ShadowDepth="10"
                                    Color="Gray" />
                            </Border.Effect>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel>
                        <Grid>
                            <CheckBox
                                x:Name="ToggleButton"
                                Content="{TemplateBinding Content}"
                                IsChecked="{Binding RelativeSource={RelativeSource AncestorType=CheckBox}, Path=IsChecked}" />
                        </Grid>
                        <TextBlock
                            x:Name="StatusTextBlock"
                            Margin="18,0,0,0"
                            FontSize="{TemplateBinding FontSize}"
                            Text="Unchecked" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="StatusTextBlock" Property="Text" Value="High" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="StatusTextBlock" Property="Text" Value="Low" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <cvts:OutLimitsColorConverter x:Key="OutLimitsColorConverter" />

    <Style x:Key="NormalCombox" TargetType="ComboBox">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="labelText" TargetType="TextBlock">
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="NormalCheckBox" TargetType="CheckBox">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="numTextBox" TargetType="TextBox">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="MinWidth" Value="80"/>
    </Style>
    <Style TargetType="Button" x:Key="topButton">
        <Setter Property="Margin" Value="5,5,5,0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="Button" x:Key="NormalButton">
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TitleLabel" TargetType="TextBlock">
        <!--
         Margin="10,5,0,0"
            FontSize="24"
        -->
        <Setter Property="Margin" Value="10,5,0,0"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
</ResourceDictionary>
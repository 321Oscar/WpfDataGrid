<UserControl
    x:Class="ERad5TestGUI.Views.SafingLogicView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:ERad5TestGUI.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:ERad5TestGUI.Models"
    xmlns:ctrls="clr-namespace:ERad5TestGUI.Components"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Background="White"
    mc:Ignorable="d">
    <UserControl.Resources>
        <sys:Double x:Key="MaxProgressValue">199</sys:Double>
    </UserControl.Resources>
    <Grid>
        <Grid.Resources>
            <DataTemplate DataType="{x:Type models:SavingLogicInOutGroup}">
                <Grid Margin="5">
                    <ItemsControl ItemsSource="{Binding InOutGroups}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type models:SavingLogicGroup}">
                                <GroupBox Header="{Binding GroupName}" MinWidth="280">
                                    <ItemsControl ItemsSource="{Binding Signals}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="{x:Type models:SavingLogicSignal}">
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Margin="15,5" Text="{Binding Name}" />
                                                    <CheckBox IsChecked="{Binding PinHigh}" Content="{Binding PinStatus}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </GroupBox>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </DataTemplate>
            <DataTemplate DataType="{x:Type models:SavingLogicButtonSignalGroup}">
                <GroupBox Header="{Binding GroupName}" Grid.IsSharedSizeScope="True" Margin="5">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition SharedSizeGroup="Direction"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Current Direction" Grid.Column="1"/>
                        <ItemsControl ItemsSource="{Binding Signals}" Grid.Row="1" Grid.ColumnSpan="2">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:SavingLogicButtonSignal}">
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition SharedSizeGroup="Direction"/>
                                        </Grid.ColumnDefinitions>
                                        <Button Content="{Binding Name}" Command="{Binding DataContext.ChangeSignalInputOutputCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                CommandParameter="{Binding }"/>
                                        <TextBlock Text="{Binding Direction}" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                           
                        </ItemsControl>
                    </Grid>
                    
                </GroupBox>
               
            </DataTemplate>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <TextBlock
            Grid.Row="0"
            Style="{StaticResource TitleLabel}"
            Text="Safing Logic" />
        <StackPanel 
            Grid.Row="0" 
            Orientation="Horizontal" 
            Margin="180,0,0,0" 
            VerticalAlignment="Center">
            <Button
                Content="Start" 
                Command="{Binding StartTestCommand}" 
                Margin="2,10">
                <Button.ToolTip>
                    <TextBlock>If Test Fail,it will output An Excel File</TextBlock>
                </Button.ToolTip>
            </Button>
            <Button 
                Content="Stop"
                Margin="0,10,2,10"
                Command="{Binding StopTestCommand}"/>
            <ProgressBar 
                Width="120" 
                Margin="0,10" 
                adonisExtensions:ProgressBarExtension.Content="{Binding TestProgressPercent}"
                Value="{Binding TestProgress.OriginValue}" 
                Maximum="199" >
                <!--<adonisExtensions:ProgressBarExtension.Content>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding TestProgress.OriginValue,
                            Mode=OneWay,
                            Converter={StaticResource ProgressToPercentageConverter},
                            ConverterParameter={StaticResource MaxProgressValue}}">
                            --><!--<TextBlock.Text>
                                <MultiBinding Converter="{StaticResource ClearCommandParamtersConvert}">
                                    <MultiBinding.Bindings>
                                        <Binding Path="TestProgress.OriginValue"/>
                                        <Binding Source="{x:Type models:AnalogSignal}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </TextBlock.Text>--><!--
                        </TextBlock>
                        <TextBlock Text="{Binding TestProgressPercent}" Foreground="Black"/>
                    </StackPanel>
                </adonisExtensions:ProgressBarExtension.Content>-->
            </ProgressBar>
            <ctrls:ControlWithTitle 
                Height="15"
                Margin=" 5,0"
                Title="Err Row Count:"
                Content="{Binding ErrRowCount.OriginValue}"
                Style="{StaticResource ControlWithTitleGridStyle}">
            </ctrls:ControlWithTitle>
            <Button Content="Init Excel" Margin="0,10" Command="{Binding SelectExcelCommand}"/>
            <Button Content="Export Test Excel" Margin="0,10" Command="{Binding ExportExcelCommand}"/>
            <!--<Button Content="Notes"  Margin="0,10" Command="{Binding DialogCommand}"/>-->
        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.Resources>
                <Style x:Key="DisableBorder" TargetType="Border" BasedOn="{StaticResource CellBorderHor}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEnable}" Value="False">
                            <Setter Property="Background" Value="#aeaaaa" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <DataTemplate DataType="{x:Type models:DiscreteInputSignal}">
                    <Border Style="{StaticResource CardBorder}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" SharedSizeGroup="SignalName"/>
                                <RowDefinition Height="auto" SharedSizeGroup="value1" />
                                <RowDefinition Height="auto" SharedSizeGroup="value2"/>
                            </Grid.RowDefinitions>
                            <Grid Margin="0,5" HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock 
                                    Style="{StaticResource SignalNameFontStyle}"
                                     Text="{Binding DisplayName}">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="270"></RotateTransform>
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                                <TextBlock 
                                    Style="{StaticResource DescriptionTextBlockStyle}"
                                    Text="{Binding PinNumber}"
                                    Grid.Row="1">
                                </TextBlock>
                            </Grid>
                            <Border 
                                Grid.Column="1" 
                                Style="{StaticResource DisableBorder}"
                                Grid.Row="1">
                                <StackPanel
                                    Margin="5,0"
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center" 
                                    Orientation="Horizontal">
                                    <ToggleButton 
                                        IsEnabled="False"
                                        Visibility="Collapsed"
                                        Style="{DynamicResource {x:Static adonisUi:Styles.ToggleSwitch}}">
                                    </ToggleButton>
                                    <TextBlock 
                                        Margin="0,0,5,0">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding OriginValue}" Value="1">
                                                        <Setter Property="Text" Value="High"/>
                                                    </DataTrigger> 
                                                    <DataTrigger Binding="{Binding OriginValue}" Value="0">
                                                        <Setter Property="Text" Value="Low"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </Border>
                            <Border 
                                Grid.Row="2" 
                                Style="{StaticResource DisableBorder}">
                                <TextBlock 
                                    Text="{Binding OriginValue}" 
                                    Style="{StaticResource ValueTextBlockStyle}"
                                    Grid.Column="2"/>
                            </Border>
                        </Grid>
                        <Border.ToolTip>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SignalToolTip}"/>
                        </Border.ToolTip>
                    </Border>
                </DataTemplate>

                <DataTemplate DataType="{x:Type models:DiscreteOutputSignal}">
                    <Border Style="{StaticResource CardBorder}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" SharedSizeGroup="SignalName"/>
                                <RowDefinition Height="auto" SharedSizeGroup="value1" />
                                <RowDefinition Height="auto" SharedSizeGroup="value2"/>
                            </Grid.RowDefinitions>
                            <Grid Margin="0,5" HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock 
                                    Style="{StaticResource SignalNameFontStyle}"
                                     Text="{Binding DisplayName}">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="270"></RotateTransform>
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                                <TextBlock 
                                    Style="{StaticResource DescriptionTextBlockStyle}"
                                    Text="{Binding PinNumber}"
                                    Grid.Row="1">
                                </TextBlock>
                            </Grid>
                            <Border Style="{StaticResource CellBorderHor}" Grid.Row="1">
                                <StackPanel
                                    Margin="5,0"
                                    Grid.Column="1" 
                                    VerticalAlignment="Center" 
                                    HorizontalAlignment="Center">
                                <ToggleButton 
                                    Visibility="{Binding IsOutput,Converter={StaticResource BooleanToVisibilityConverter}}"
                                    IsChecked="{Binding Pin_High, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                    Style="{DynamicResource {x:Static adonisUi:Styles.ToggleSwitch}}">
                                </ToggleButton>
                                <TextBlock 
                                    Text="Low" 
                                    Visibility="{Binding Pin_Low,Converter={StaticResource BooleanToVisibilityConverter}}" 
                                    Margin="0,0,5,0"/>
                                <TextBlock 
                                    Text="High" 
                                    Visibility="{Binding Pin_High,Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </StackPanel>
                            </Border>
                            <Border 
                                Grid.Row="2" 
                                Style="{StaticResource CellBorderHor}" >
                                <TextBlock 
                                    Text="{Binding State.OriginValue}" 
                                    Style="{StaticResource ValueTextBlockStyle}"
                                    Grid.Column="2"/>
                            </Border>

                        </Grid>
                        <Border.ToolTip>
                            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SignalToolTip}"/>
                        </Border.ToolTip>
                    </Border>

                </DataTemplate>

                <DataTemplate x:Key="BaseGroup">
                    <GroupBox Header="{Binding GroupName}">
                        <Grid Margin="-7">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" SharedSizeGroup="ColumnHeader"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <!--Column Header -->
                            <Border Grid.Row="0" Style="{StaticResource CardBorder}" Margin="0,2,0,0">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" SharedSizeGroup="SignalName"/>
                                        <RowDefinition Height="auto" SharedSizeGroup="value1" />
                                        <RowDefinition Height="auto" SharedSizeGroup="value2"/>
                                    </Grid.RowDefinitions>
                                    <Border 
                                        Style="{StaticResource CellBorderHor}" 
                                        BorderThickness="0,0,0,2"
                                        HorizontalAlignment="Center">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="SignalName" Style="{StaticResource SignalNameFontStyle}" >
                                                <TextBlock.LayoutTransform>
                                                    <RotateTransform Angle="270"></RotateTransform>
                                                </TextBlock.LayoutTransform>
                                            </TextBlock>
                                            <TextBlock 
                                                Style="{StaticResource DescriptionTextBlockStyle}"
                                                Text="PinNumber"
                                                Grid.Column="1">
                                                <TextBlock.LayoutTransform>
                                                    <RotateTransform Angle="270"></RotateTransform>
                                                </TextBlock.LayoutTransform>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                    <StackPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                        <TextBlock Text="Pin Low/High" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <TextBlock Text="State" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </Border >
                            <!--Content-->
                            <ItemsControl ItemsSource="{Binding Signals}" Grid.Column="1">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="15" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </GroupBox>
                </DataTemplate>

                <DataTemplate x:Key="BaseGroupWithoutHeader">
                    <GroupBox Header="{Binding GroupName}">
                        <Grid Margin="-7">
                            <ItemsControl 
                                ItemsSource="{Binding Signals}" 
                                Grid.Column="0"
                                Margin="0,0,0,0">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="9" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </GroupBox>
                </DataTemplate>
                <DataTemplate DataType="{x:Type models:SafingLoficTestResult}">
                    <Border BorderThickness="0,2,2,1">
                        <TextBlock Text="{Binding RealValue}" Style="{StaticResource ValueTextBlockStyle}" />
                        <Border.Style>
                            <Style TargetType="Border" BasedOn="{StaticResource CellBorderHor}">
                                <Setter Property="Background" Value="White"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Pass}" Value="True">
                                        <Setter Property="Background" Value="White"/>
                                    </DataTrigger>  
                                    <!--<DataTrigger Binding="{Binding Path=Pass}" Value="{x:Null}">
                                        <Setter Property="Background" Value="Gray"/>
                                    </DataTrigger>--> 
                                    <DataTrigger Binding="{Binding Path=Pass}" Value="False">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </DataTemplate> 
                <DataTemplate x:Key="SafingResultCell">
                    <Border Style="{StaticResource CellBorderHor}" Background="White" BorderThickness="0,2,2,1">
                        <TextBlock Text="{Binding}" Style="{StaticResource ValueTextBlockStyle}" />
                    </Border>
                </DataTemplate>
            </Grid.Resources>
            <Grid Grid.IsSharedSizeScope="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <!--Signals-->
                <ScrollViewer 
                    x:Name="sv1" 
                    
                    HorizontalScrollBarVisibility="Auto"
                    adonisExtensions:ScrollViewerExtension.HideScrollBarsUntilMouseOver="True"
                    adonisExtensions:ScrollViewerExtension.HorizontalScrollBarPlacement="Overlay"
                    ScrollChanged="s1_ScrollChanged">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" SharedSizeGroup="Inputs"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <ContentControl Content="{Binding InputSignals}" ContentTemplate="{StaticResource BaseGroup}" />

                        <ContentControl
                            Grid.Column="1" 
                            Margin="5,0,0,0"
                            Content="{Binding OutputSignals}"
                            ContentTemplate="{StaticResource BaseGroupWithoutHeader}" />
                    </Grid>
                </ScrollViewer>
                <!--Test Result-->
                <ScrollViewer 
                    x:Name="sv2" 
                    Grid.Row="1" 
                    HorizontalScrollBarVisibility="Auto"
                    adonisExtensions:ScrollViewerExtension.HideScrollBarsUntilMouseOver="True"
                    adonisExtensions:ScrollViewerExtension.HorizontalScrollBarPlacement="Overlay"
                    adonisExtensions:ScrollViewerExtension.VerticalScrollBarPlacement="Overlay"
                    ScrollChanged="s1_ScrollChanged">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" SharedSizeGroup="Inputs"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Grid Grid.ColumnSpan="2" Panel.ZIndex="99">
                            <Grid.Style>
                                <Style TargetType="FrameworkElement">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>

                            <Border Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}"
                                    Opacity="0.5"/>

                            <ContentControl 
                                ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.LoadingCircle}}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Width="{adonisUi:Space 5}"
                                Height="{adonisUi:Space 5}"
                                Focusable="False"/>
                        </Grid>

                        <GroupBox Header="Inputs" Grid.Column="0">
                            <ItemsControl 
                                Margin="-7"
                                ItemsSource="{Binding TableRows}"
                                VirtualizingStackPanel.IsVirtualizing="True"
                                VirtualizingStackPanel.VirtualizationMode="Recycling"
                                Grid.Column="1">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type models:SafingLogicTestTableRow}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" SharedSizeGroup="ColumnHeader"/>
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Border 
                                                Grid.Row="0" 
                                                Style="{StaticResource CardBorder}" 
                                                Margin="0,2,0,0" 
                                                BorderThickness="0,0,2,0">
                                                <TextBlock Text="{Binding RowIndex}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                            <UniformGrid Columns="15" Grid.Column="1">
                                                <ContentControl Content="{Binding SAFESTATE1}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding SAFESTATE2}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding SPD_HW_3PS_OUT}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding PS_MAIN_MICRO}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding MTR_SPEED_STAT}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding PWM_EN}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding ESTOP}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding HVDC_OV_FLT}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding DSAT_TOP_FLT}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding DSAT_BOT_FLT}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding UVLO_TOP_FLT}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding UVLO_BOT_FLT}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding OC_U_FLT}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding OC_V_FLT}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                                <ContentControl Content="{Binding OC_W_FLT}" ContentTemplate="{StaticResource SafingResultCell}"/>
                                            </UniformGrid>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </GroupBox>
                        <!--Result-->
                        <GroupBox 
                            Header="Outputs" 
                            Grid.Column="1"
                            Margin="5,0">
                            <ItemsControl 
                                Margin="-7"
                                ItemsSource="{Binding TableRows}" 
                                Grid.Column="1" 
                                VirtualizingStackPanel.IsVirtualizing="True"
                                VirtualizingStackPanel.VirtualizationMode="Recycling"
                                HorizontalContentAlignment="Stretch">
                                <!--<ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    </Style>
                                </ListBox.ItemContainerStyle>-->
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type models:SafingLogicTestTableRow}">
                                        <Grid >
                                            <UniformGrid Columns="9" Grid.Column="1">
                                                <ContentControl Content="{Binding FORCE_UPPERS_ON}" />
                                                <ContentControl Content="{Binding FORCE_LOWERS_ON}" />
                                                <ContentControl Content="{Binding PWM_BUFFER}" />
                                                <ContentControl Content="{Binding FSSTATE_BOT}" />
                                                <ContentControl Content="{Binding FSSTATE_TOP}" />
                                                <ContentControl Content="{Binding FSENB}" />
                                                <ContentControl Content="{Binding OUT_EN}" />
                                                <ContentControl Content="{Binding PHASE_UVW_OC_FLT}" />
                                                <Border >
                                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <!--<Setter Property="Background" Value="White"/>-->
                                                                <Setter Property="Foreground" Value="White" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=Result}" Value="True">
                                                                        <Setter Property="Text" Value="Pass"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=Result}" Value="{x:Null}">
                                                                        <Setter Property="Text" Value="NoTest"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=Result}" Value="False">
                                                                        <Setter Property="Text" Value="Fail"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                    <Border.Style>
                                                        <Style TargetType="Border" BasedOn="{StaticResource CellBorderHor}">
                                                            <Setter Property="Background" Value="White"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=Result}" Value="True">
                                                                    <Setter Property="Background" Value="Green"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=Result}" Value="{x:Null}">
                                                                    <Setter Property="Background" Value="Gray"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=Result}" Value="False">
                                                                    <Setter Property="Background" Value="Red"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                </Border>
                                            </UniformGrid>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </GroupBox>
                    </Grid>
                </ScrollViewer>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <!--<DataGrid ItemsSource="{Binding TableRows}" IsReadOnly="True" Height="200">

                </DataGrid>-->
                <GroupBox Header="Safing Logic Test Error Info" Grid.Row="1">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock>Test Fail Reason:</TextBlock>
                        <StackPanel Orientation="Horizontal">
                            <ctrls:ReadOnlyRadioButton Title="Test Row Fail" IsChecked="{Binding TestRowFail}"/>
                            <ctrls:ReadOnlyRadioButton Title="SBC Fail" IsChecked="{Binding SBCFail}"/>
                            <ctrls:ReadOnlyRadioButton Title="NXP Fail" IsChecked="{Binding NXPFail}"/>
                            <ctrls:ReadOnlyRadioButton Title="Precondition Fail" IsChecked="{Binding PreconditionFail}"/>
                            <ctrls:ReadOnlyRadioButton Title="No Fail" IsChecked="{Binding TestNoFail}"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

            </Grid>

            <GroupBox 
                Grid.Row="0" 
                Grid.Column="2" 
                Grid.ColumnSpan="1"
                Header="Direction">
                <Grid Grid.IsSharedSizeScope="True">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition />
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="name" />
                            <ColumnDefinition SharedSizeGroup="inp" />
                            <ColumnDefinition SharedSizeGroup="outp" />
                            <ColumnDefinition SharedSizeGroup="dir" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Input" Grid.Column="1"  HorizontalAlignment="Center"/>
                        <TextBlock Text="Output" Grid.Column="2"  HorizontalAlignment="Center"/>
                        <TextBlock Text="Current Direction" Grid.Column="3"/>
                    </Grid>
                    <ScrollViewer Grid.Row="1">
                        <ItemsControl ItemsSource="{Binding DerectionSignals}"  >
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type models:SafingLogicDirectionSelect}">
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="name" Width="auto"/>
                                            <ColumnDefinition SharedSizeGroup="inp" Width="60"/>
                                            <ColumnDefinition SharedSizeGroup="outp" Width="60"/>
                                            <ColumnDefinition SharedSizeGroup="dir" Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding CurrentDirection.Name}" Grid.Column="0"/>
                                        <RadioButton 
                                        HorizontalAlignment="Center"
                                        IsChecked="{Binding Select.Direction,Converter={StaticResource InvertBooleanConverter}}" Grid.Column="1"/>
                                        <RadioButton  HorizontalAlignment="Center" IsChecked="{Binding Select.Direction}"  Grid.Column="2"/>
                                        <TextBox  Grid.Column="3">
                                            <TextBox.Style>
                                                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding CurrentDirection.Direction}" 
                                                                 Value="True">
                                                            <Setter Property="Text" Value="Output"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding CurrentDirection.Direction}" 
                                                                 Value="False">
                                                            <Setter Property="Text" Value="Input"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                            <TextBox.ToolTip>
                                                <ContentControl Content="{Binding CurrentDirection}" ContentTemplate="{StaticResource SignalToolTip}"/>
                                            </TextBox.ToolTip>
                                        </TextBox>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                    <Button Content="Update" Grid.Row="2" Width="80" Command="{Binding UpdateDirCommand}">
                        <Button.ToolTip>
                            <ContentControl Content="{Binding Safing_Logic_Pin_Dir_Update}" ContentTemplate="{StaticResource SignalToolTip}"/>
                        </Button.ToolTip>
                    </Button>
                </Grid>
            </GroupBox>
        </Grid>
        <!--<ScrollViewer Grid.Row="1">
            <ItemsControl ItemsSource="{Binding SavingLogicGroups}" >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel>

                        </WrapPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>-->
       
        <!--<WrapPanel Grid.Row="2">
            <GroupBox Header=" Level1 Input">
                <ItemsControl ItemsSource="{Binding SavingLogicSignals}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:SavingLogicSignal}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="15,5" Text="{Binding Name}" />
                                <CheckBox IsChecked="{Binding PinHigh}" />
                                <TextBlock Text="{Binding PinStatus}" />
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </GroupBox>
            <GroupBox Header=" Level2 Input">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="xx" />
                        <CheckBox Content="Low" />
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <GroupBox Header=" Level1" />
        </WrapPanel>-->
    </Grid>
</UserControl>

<UserControl
    x:Class="ERad5TestGUI.Views.MemoryView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:ctrls="clr-namespace:ERad5TestGUI.Components"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:ERad5TestGUI.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:udsModel="clr-namespace:ERad5TestGUI.UDS"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <DataTemplate DataType="{x:Type udsModel:UDSServerAbstract}">
            <Expander BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}" BorderThickness="0,0,0,1">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnResult" />

                        </Grid.ColumnDefinitions>
                        <CheckBox
                            IsChecked="{Binding Checked, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                            IsEnabled="{Binding DataContext.UdsRunning, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource InvertBooleanConverter}, UpdateSourceTrigger=PropertyChanged}"
                            Visibility="Collapsed" />
                        <TextBlock
                            Grid.Column="1"
                            Margin="5,0,0,0"
                            Text="{Binding ServerName}" />
                        <Grid Grid.Column="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnStatue" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="{Binding ProgressInt, StringFormat={}{0}%, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                            <ProgressBar
                                Width="100"
                                Height="15"
                                Margin="10,0,0,0"
                                Foreground="{Binding Result, Converter={StaticResource ResourceKey=staColor}, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                IsIndeterminate="{Binding ProgressInt, Converter={StaticResource progressConverter}, NotifyOnSourceUpdated=True}"
                                Opacity="0.5"
                                Value="{Binding ProgressInt, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />

                            <TextBlock
                                Grid.Column="1"
                                Margin="10,0,0,0"
                                Text="{Binding CurrentStatue, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Column="2"
                                Margin="10,0,0,0"
                                Foreground="{Binding Result, Converter={StaticResource ResourceKey=staColor}, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                Text="{Binding Result, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                    </Grid>
                </Expander.Header>
                <StackPanel Margin="5,0,0,0">
                    <TextBox
                        Margin="5,0,0,0"
                        FontFamily="Consolas"
                        IsReadOnly="True"
                        Text="{Binding SendAndReceiveStr, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox
                        Margin="5,0,0,0"
                        IsReadOnly="True"
                        Text="{Binding ResultMsg, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </Expander>
        </DataTemplate>

        <DataTemplate DataType="{x:Type udsModel:MultipServer}">
            <Expander
                x:Name="exp"
                Padding="5"
                BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}"
                BorderThickness="0,0,0,1">
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnResult" />
                        </Grid.ColumnDefinitions>

                        <CheckBox
                            Grid.Column="0"
                            IsChecked="{Binding Checked, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                            IsEnabled="{Binding DataContext.UdsRunning, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource InvertBooleanConverter}, UpdateSourceTrigger=PropertyChanged}"
                            Visibility="Collapsed" />
                        <TextBlock
                            Grid.Column="1"
                            Margin="5,0,0,0"
                            Text="{Binding Name}" />

                        <Grid Grid.Column="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnStatue" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="Black"
                                Text="{Binding ProgressInt, StringFormat={}{0}%, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                            <ProgressBar
                                Width="100"
                                Height="15"
                                Margin="10,0,0,0"
                                Foreground="{Binding Result, Converter={StaticResource ResourceKey=staColor}, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                IsIndeterminate="{Binding ProgressInt, Converter={StaticResource progressConverter}, NotifyOnSourceUpdated=True}"
                                Opacity="0.5"
                                Value="{Binding ProgressInt, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Column="1"
                                Margin="10,0,0,0"
                                Text="{Binding MultiStatus, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock
                                Grid.Column="2"
                                Margin="10,0,0,0"
                                Foreground="{Binding Result, Converter={StaticResource ResourceKey=staColor}, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                Text="{Binding Result, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                    </Grid>

                </Expander.Header>
                <ItemsControl
                    Margin="5,0,0,0"
                    ItemsSource="{Binding Servers}"
                    PreviewMouseWheel="ListView_PreviewMouseWheel" />
            </Expander>
        </DataTemplate>

        <DataTemplate DataType="{x:Type udsModel:ComplexServers}">
            <StackPanel>
                <Expander BorderBrush="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}" BorderThickness="0,0,0,1">
                    <Expander.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition SharedSizeGroup="ColumnResult" />
                            </Grid.ColumnDefinitions>
                            <CheckBox
                                IsChecked="{Binding Checked, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                                IsEnabled="{Binding DataContext.UdsRunning, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Converter={StaticResource InvertBooleanConverter}, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="Collapsed" />
                            <TextBlock
                                Grid.Column="1"
                                MaxWidth="460"
                                Margin="5,0,0,0"
                                HorizontalAlignment="Left"
                                Text="{Binding Name}"
                                TextTrimming="CharacterEllipsis"
                                ToolTip="{Binding Name}" />
                            <Grid Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="ColumnStatue" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="Black"
                                    Text="{Binding ProgressInt, StringFormat={}{0}%, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                                <ProgressBar
                                    Width="100"
                                    Height="15"
                                    Margin="10,0,0,0"
                                    Foreground="{Binding Result, Converter={StaticResource ResourceKey=staColor}, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                    IsIndeterminate="{Binding ProgressInt, Converter={StaticResource progressConverter}, NotifyOnSourceUpdated=True}"
                                    Opacity="0.6"
                                    Value="{Binding ProgressInt, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />

                                <TextBlock
                                    Grid.Column="1"
                                    Margin="10,0,0,0"
                                    Text="{Binding MultiStatus, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock
                                    Grid.Column="2"
                                    Margin="10,0,0,0"
                                    Foreground="{Binding Result, Converter={StaticResource ResourceKey=staColor}, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                    Text="{Binding Result, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </Grid>
                    </Expander.Header>
                    <ItemsControl
                        Margin="5,0,0,0"
                        ItemsSource="{Binding Servers}"
                        PreviewMouseWheel="ListView_PreviewMouseWheel" />
                </Expander>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock Style="{StaticResource TitleLabel}" Text="Memory" />
        <TabControl Grid.Row="1">
            <TabItem Header="Serial Flash">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <StackPanel>
                        <GroupBox Header="Read">
                            <StackPanel Margin="-4" Grid.IsSharedSizeScope="True">
                                <ctrls:ControlWithTitle Title="Pattern" Style="{StaticResource ControlWithTitleGridStyle}">
                                    <ctrls:ControlWithTitle.Content>
                                        <TextBox
                                            Width="100"
                                            IsReadOnly="True"
                                            Text="{Binding Erad5MemoryValue, Converter={StaticResource HexConverter}}" />
                                    </ctrls:ControlWithTitle.Content>
                                </ctrls:ControlWithTitle>
                                <ctrls:ControlWithTitle
                                    Title="Address"
                                    Margin="0,2,0,0"
                                    Style="{StaticResource ControlWithTitleGridStyle}">
                                    <ctrls:ControlWithTitle.Content>
                                        <TextBox Text="{Binding Erad5MemoryAddr, Converter={StaticResource HexConverter}}" />
                                    </ctrls:ControlWithTitle.Content>
                                </ctrls:ControlWithTitle>
                                <Button
                                    Margin="0,2,0,0"
                                    Command="{Binding ReadCommand}"
                                    Content="Read" />
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Write">
                            <StackPanel Margin="-4" Grid.IsSharedSizeScope="True">
                                <ctrls:ControlWithTitle Title="Pattern" Style="{StaticResource ControlWithTitleGridStyle}">
                                    <ctrls:ControlWithTitle.Content>
                                        <TextBox Width="100" Text="{Binding Erad5MemoryWriteValue, Converter={StaticResource HexConverter}}" />
                                    </ctrls:ControlWithTitle.Content>
                                </ctrls:ControlWithTitle>
                                <ctrls:ControlWithTitle
                                    Title="Address"
                                    Margin="0,2,0,0"
                                    Style="{StaticResource ControlWithTitleGridStyle}">
                                    <ctrls:ControlWithTitle.Content>
                                        <TextBox Text="{Binding Erad5MemoryWriteAddr, Converter={StaticResource HexConverter}}" />
                                    </ctrls:ControlWithTitle.Content>
                                </ctrls:ControlWithTitle>
                                <Button
                                    Margin="0,2,0,0"
                                    Command="{Binding WriteCommand}"
                                    Content="Write" />
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Test" Visibility="Collapsed">
                            <StackPanel Margin="-4">
                                <Button Content="Test Serial Flash" IsEnabled="False" />
                                <ProgressBar
                                    Height="25"
                                    Margin="0,2"
                                    Value="80" />
                                <Button Content="Reset" IsEnabled="False" />
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                    <GroupBox
                        Grid.Column="1"
                        Margin="2,0"
                        Header="Data">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <WrapPanel Margin="0,0,0,8" Orientation="Horizontal">
                                <Button Command="{Binding ReadAllCommand}" Content="Read All" />
                                <Button
                                    Margin="2,0"
                                    Command="{Binding WriteAllCommand}"
                                    Content="Write All" />
                                <Button Command="{Binding CancelUdsServersCommand}" Content="Cancel" />
                                <Button
                                    Margin="2,0"
                                    Command="{Binding LoadSrecFileCommand}"
                                    Content="Load File">
                                    <Button.ToolTip>
                                        <TextBlock Text="Support Srec File Only" />
                                    </Button.ToolTip>
                                </Button>
                                <Button Command="{Binding SaveAsSrecCommand}" Content="Save" />
                            </WrapPanel>

                            <Grid Grid.Row="1" Panel.ZIndex="99">
                                <Grid.Style>
                                    <Style TargetType="FrameworkElement">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>

                                <Border Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}" Opacity="0.5" />

                                <ContentControl
                                    Width="{adonisUi:Space 5}"
                                    Height="{adonisUi:Space 5}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.LoadingCircle}}"
                                    Focusable="False" />
                            </Grid>


                            <ListView
                                Grid.Row="1"
                                Grid.Column="0"
                                FontFamily="Consolas"
                                FontSize="16"
                                ItemsSource="{Binding SrecFileOnlyData.Content}"
                                ScrollViewer.CanContentScroll="True"
                                ScrollViewer.IsDeferredScrollingEnabled="True"
                                VirtualizingPanel.IsVirtualizing="True"
                                VirtualizingPanel.VirtualizationMode="Recycling">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel
                                            VirtualizingPanel.CacheLength="100000"
                                            VirtualizingPanel.IsContainerVirtualizable="True"
                                            VirtualizingPanel.ScrollUnit="Pixel" />
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn
                                            Width="100"
                                            DisplayMemberBinding="{Binding Address, StringFormat={}{0:X8}}"
                                            Header="Address" />
                                        <GridViewColumn
                                            Width="100"
                                            DisplayMemberBinding="{Binding DataStr}"
                                            Header="Data" />
                                    </GridView>
                                </ListView.View>
                            </ListView>

                        </Grid>
                    </GroupBox>

                    <GroupBox
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="2"
                        Header="Details">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                <Button Command="{Binding ClearUdsServersCommand}" Content="Clear" />
                            </StackPanel>
                            <ScrollViewer Grid.Row="1">
                                <ItemsControl Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}" ItemsSource="{Binding Servers}" />
                            </ScrollViewer>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>

        </TabControl>
    </Grid>
</UserControl>

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cmds="clr-namespace:ERad5TestGUI.Commands"
    xmlns:ctrls="clr-namespace:ERad5TestGUI.Components"
    xmlns:cvts="clr-namespace:ERad5TestGUI.Converters"
    xmlns:viewModels="clr-namespace:ERad5TestGUI.ViewModels"
    xmlns:models="clr-namespace:ERad5TestGUI.Models"
    xmlns:views="clr-namespace:ERad5TestGUI.Views"
    xmlns:udsModel="clr-namespace:ERad5TestGUI.UDS"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/eRad5TestGUI;component/Themes/Styles.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/eRad5TestGUI;component/Themes/Icons.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <cmds:ClearSignalDataCommand x:Key="ClearSignalDataCommand"/>
    <cvts:OutLimitsColorConverter x:Key="OutLimitsColorConverter" />
    <cvts:DoubleBooleanConverter x:Key="DoubleBooleanConverter"/>
    <cvts:BooleanInvertVisibilityConverter x:Key="BooleanInvertVisibilityConverter"/>
    <cvts:EnumerableNullReplaceConverter x:Key="EnumerableNullReplaceConverter"/>
    <cvts:DeviceStartConverter x:Key="DeviceStartConverter"/>
    <cvts:InvertBooleanConverter x:Key="InvertBooleanConverter"/>
    <cvts:DoubleHexConverter x:Key="DoubleHexConverter"/>
    <cvts:HexConverter x:Key="HexConverter"/>
    <cvts:DoubleToByteHexConverter x:Key="DoubleToByteHexConverter"/>
    <cvts:ClearCommandParamtersConvert x:Key="ClearCommandParamtersConvert"/>
    <cvts:ProgressToPercentageConverter x:Key="ProgressToPercentageConverter"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <cvts:ColorMultiConverter x:Key="staMultiColor" />
    <cvts:ColorConverter x:Key="staColor" />
    <cvts:Int2StringConverter x:Key="intStrConverter" />
    <cvts:Enable2ReadOnlyConverter x:Key="enable2ReadConverter" />
    <cvts:ProgressStyleConverter x:Key="progressConverter" />

    <DataTemplate DataType="{x:Type viewModels:DeviceViewModel}">
        <views:DevicesView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:AnalogViewModel}">
        <views:AnalogView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:DiscreteViewModel}">
        <views:DiscreteView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:PulseInViewModel}">
        <views:PulseInView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:PulseOutViewModel}">
        <views:PulseOutView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:GDICViewModel}">
        <views:GDIC3160View />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:LogViewModel}">
        <views:LogView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:MemoryViewModel}">
        <views:MemoryView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:NXPViewModel}">
        <views:NXPView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:PPAWLViewModel}">
        <views:PPAWLView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:SafingLogicViewModel}">
        <views:SafingLogicView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:SPIViewModel}">
        <views:SPIView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:NXPFlashViewModel}">
        <views:NXPFlashView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:ResolverViewModel}">
        <views:ResolverView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:UDSUpgradeViewModel}">
        <views:UDSUpgradeView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:LayoutViewModel}">
        <ctrls:Layout />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:LinViewModel}">
        <views:LINView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:DisConnectViewModel}">
        <views:DisConnectView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:ELockerViewModel}">
        <views:ELockerView />
    </DataTemplate>
    
    
    <DataTemplate DataType="{x:Type viewModels:AnalogSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:ResolverSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:DiscreteInputSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:DiscreteOutputSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:PulseOutSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:PulseInSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:NXPSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:NXPInputSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate>  
    <DataTemplate DataType="{x:Type viewModels:GDICStatusDataSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:GDICRegisterSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate> 
   
    <DataTemplate DataType="{x:Type models:SignalBase}">
        <TextBlock Text="{Binding DisplayName}"/>
    </DataTemplate>

    <!--<DataTemplate x:Key="BaseSignalIn">
        
    </DataTemplate>-->

    <DataTemplate x:Key="SignalToolTip">
        <Border>
            <StackPanel>
                <ctrls:LabelWithContent Title="Name:" Content="{Binding DisplayName}"/>
                <ctrls:LabelWithContent Title="MsgID:" Content="{Binding MessageID,StringFormat='0x{0:X}'}"/>
                <ctrls:LabelWithContent Title="StartBit:" Content="{Binding StartBit}"/>
                <ctrls:LabelWithContent Title="Length:" Content="{Binding Length}"/>
                <ctrls:LabelWithContent Title="Uint:" Content="{Binding Unit}"/>
                <ctrls:LabelWithContent Title="OriginalValue:" Content="{Binding OriginValue}"/>
            </StackPanel>
        </Border>
    </DataTemplate>

    <ContextMenu x:Key="CommonGridContextMenu">
        <!--<MenuItem Header="Cut" Command="ApplicationCommands.Cut"/>-->
        <MenuItem Header="Copy" Command="{x:Static cmds:ApplicationCommands.CopyNameCommand}" CommandParameter="{Binding}"/>
        <!--<MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>-->
        <Separator/>
        <!--<MenuItem Header="Custom Action" Command="{Binding CustomCommand}"/>-->
    </ContextMenu>

    <DataTemplate x:Key="CommonSignalNoBorder">
        <Grid ContextMenu="{StaticResource CommonGridContextMenu}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*" MinWidth="150"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock 
                     Margin="0,0,5,0"
                     Style="{StaticResource ValueTextBlockStyle}"
                     FontSize="25"
                     Text="{Binding Value1}" 
                     Foreground="{Binding OutLimits, Converter={StaticResource OutLimitsColorConverter}}"/>
                <TextBlock Text="{Binding Unit}" VerticalAlignment="Center" Foreground="Gray"/>
            </StackPanel>
            <StackPanel Grid.Column="0" Margin="2">
                <TextBlock Text="{Binding MaxValue,StringFormat={}{0:f2}}" FontSize="10" Foreground="Gray"/>
                <TextBlock Text="{Binding MinValue,StringFormat={}{0:f2}}" FontSize="10"  Margin="0,3,0,0"/>
                <!--<TextBlock Text="{Binding OutLimits}" FontSize="10"  Margin="0,3,0,0"/>-->
            </StackPanel>
            <StackPanel Grid.Column="2" Margin="5" >
                <TextBlock Text="{Binding MaxThreshold}" FontSize="10"/>
                <TextBlock Text="{Binding MinThreshold}" FontSize="10"/>
            </StackPanel>
            <Grid.ToolTip>
                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SignalToolTip}"/>
            </Grid.ToolTip>
        </Grid>
        
    </DataTemplate>

    <DataTemplate x:Key="CommonSignal">
        <Border Style="{StaticResource CellBorder}">
            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource CommonSignalNoBorder}"/>
        </Border>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type models:AnalogSignal}">
        <Border Style="{StaticResource CardBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" SharedSizeGroup="SignalName" MinWidth="100"/>
                    <ColumnDefinition Width="auto" SharedSizeGroup="value2" MinWidth="100"/>
                    <ColumnDefinition Width="auto" SharedSizeGroup="value1" MinWidth="100"/>
                    <ColumnDefinition Width="auto" SharedSizeGroup="valueStad" MinWidth="100"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Style="{StaticResource CellBorder}">
                    <Grid Grid.Column="0" ToolTip="{Binding DisplayName}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding DisplayName}" Style="{StaticResource SignalNameFontStyle}"/>
                        <StackPanel Grid.Column="1" VerticalAlignment="Center">
                            <TextBlock Text="{Binding PinNumber}" Style="{StaticResource DescriptionTextBlockStyle}"/>
                            <TextBlock Text="{Binding ADChannel}" Style="{StaticResource DescriptionTextBlockStyle}"/>
                        </StackPanel>
                    </Grid>
                </Border>
                <!-- AI Raw & AI Scaled-->
                <Border Style="{StaticResource CellBorder}" Grid.Column="1" >
                    <TextBlock
                        Style="{StaticResource ValueTextBlockStyle}"
                        Text="{Binding Value2}" 
                        ToolTip="AI Scaled"/>
                </Border>
                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource CommonSignal}" Grid.Column="2" />
                <!-- Standard -->
                <TextBlock
                    Margin="5,0,5,0"
                    Grid.Column="3" 
                    Text="{Binding StandardDev,StringFormat={}{0:F2}}" 
                    Style="{StaticResource ValueTextBlockStyle}" 
                    ToolTip="StandardDev"/>
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:DiscreteInputSignal}">
        <Border Style="{StaticResource CardBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" SharedSizeGroup="SignalName"/>
                    <ColumnDefinition Width="auto" MinWidth="100" SharedSizeGroup="value1"/>
                    <ColumnDefinition Width="auto" MinWidth="100" SharedSizeGroup="value2"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!--<Border Style="{StaticResource CellBorder}" Grid.Column="0" >-->
                <Grid Margin="10,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Style="{StaticResource SignalNameFontStyle}" Text="{Binding DisplayName}"/>
                    <TextBlock 
                         Style="{StaticResource DescriptionTextBlockStyle}"
                         Text="{Binding PinNumber}"
                         Grid.Column="1"/>
                </Grid>
                <!--</Border>-->
                <Border Style="{StaticResource CellBorder}" Grid.Column="1" BorderThickness="2,0">
                    <TextBlock 
                        Grid.Column="1"
                        Text="{Binding OriginValue}" 
                        Style="{StaticResource ValueTextBlockStyle}"/>
                </Border>
                <Border Style="{StaticResource CellBorder}" Grid.Column="2" Visibility="{Binding NeedTransitions,Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock 
                        Grid.Column="2"
                        Text="{Binding Transitions}" 
                        Style="{StaticResource ValueTextBlockStyle}" 
                        ToolTip="Transitions"/>
                </Border>
            </Grid>
            <Border.ToolTip>
                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SignalToolTip}"/>
            </Border.ToolTip>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="DisOutSignals">
        <Grid Grid.IsSharedSizeScope="True">
            <Grid.RowDefinitions >
                <RowDefinition Height="auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Style="{StaticResource CardBorder}" Margin="5,2,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="SignalName"/>
                        <ColumnDefinition SharedSizeGroup="value1"/>
                        <ColumnDefinition SharedSizeGroup="value2"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Border Style="{StaticResource CellBorder}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="SignalName" Style="{StaticResource SignalNameFontStyle}" />
                            <TextBlock 
                                Style="{StaticResource DescriptionTextBlockStyle}"
                                Text=" PinNumber"
                                Grid.Column="1"/>
                        </Grid>
                        
                    </Border>
                    <TextBlock Text="Pin Low/High" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <TextBlock Text="State" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
            </Border >
            <ScrollViewer Grid.Row="1">
                <ItemsControl ItemsSource="{Binding}"/>
            </ScrollViewer>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="DisInSignals">
        <Grid  Grid.IsSharedSizeScope="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Style="{StaticResource CardBorder}" Margin="5,2,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="SignalName"/>
                        <ColumnDefinition SharedSizeGroup="value1"/>
                        <ColumnDefinition SharedSizeGroup="value2"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Border Style="{StaticResource CellBorder}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="SignalName" Style="{StaticResource SignalNameFontStyle}" />
                            <TextBlock 
                                            Style="{StaticResource DescriptionTextBlockStyle}"
                                            Text=" PinNumber"
                                            Grid.Column="1"/>
                        </Grid>
                    </Border>
                    <TextBlock Text="State" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <TextBlock Text="Transition" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
            </Border >
            <ScrollViewer Grid.Row="1">
                <ItemsControl ItemsSource="{Binding}"/>
            </ScrollViewer>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="PulseInGroupList">
        <Grid Grid.IsSharedSizeScope="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Border 
                CornerRadius="1"
                Style="{StaticResource CardBorder}" 
                Margin="2,2,2,0" 
                Padding="4">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="SignalName"/>
                        <ColumnDefinition SharedSizeGroup="Value1"/>
                        <ColumnDefinition SharedSizeGroup="Value2"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Border Style="{StaticResource CellBorder}">
                        <TextBlock Text="SignalName" Style="{StaticResource SignalNameFontStyle}"/>
                    </Border>
                    <TextBlock Text="Duty Value" Grid.Column="1" HorizontalAlignment="Center"/>
                    <TextBlock Text="Freq Value(HZ)" Grid.Column="2" HorizontalAlignment="Center"/>
                </Grid>
            </Border>
            <ScrollViewer 
                Grid.Row="1" 
                ScrollViewer.VerticalScrollBarVisibility="Visible" 
                ScrollViewer.HorizontalScrollBarVisibility="Visible">
                <ItemsControl ItemsSource="{Binding }"/>
            </ScrollViewer>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="PulseOutGroupList">
        <Grid Grid.IsSharedSizeScope="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Style="{StaticResource CardBorder}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="SignalName"/>
                        <ColumnDefinition SharedSizeGroup="value1"/>
                        <ColumnDefinition SharedSizeGroup="value2"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="SignalName" Grid.Column="0" Style="{StaticResource SignalNameFontStyle}" HorizontalAlignment="Center"/>
                    <TextBlock Text="Freq(Hz)" Grid.Column="1" HorizontalAlignment="Center"/>
                    <TextBlock Text="Duty(%)" Grid.Column="2" HorizontalAlignment="Center"/>
                </Grid>
            </Border>
            <ScrollViewer Grid.Row="1">
                <ItemsControl ItemsSource="{Binding}" >
                    
                </ItemsControl>
            </ScrollViewer>
        </Grid>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type models:DiscreteOutputSignal}">
        <Border Style="{StaticResource CardBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" SharedSizeGroup="SignalName"/>
                    <ColumnDefinition Width="auto" SharedSizeGroup="value1" MinWidth="100"/>
                    <ColumnDefinition Width="auto" MinWidth="60" SharedSizeGroup="value2"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid Margin="10,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Style="{StaticResource SignalNameFontStyle}"
                         Text="{Binding DisplayName}"/>
                    <TextBlock 
                         Style="{StaticResource DescriptionTextBlockStyle}"
                         Text="{Binding PinNumber}"
                         Grid.Column="1"/>
                </Grid>
                <StackPanel
                    Margin="5,0"
                    Grid.Column="1" 
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Center" 
                    Orientation="Horizontal">
                    <ToggleButton 
                        Visibility="{Binding IsOutput,Converter={StaticResource BooleanToVisibilityConverter}}"
                        IsChecked="{Binding Pin_High, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        Style="{DynamicResource {x:Static adonisUi:Styles.ToggleSwitch}}">
                    </ToggleButton>
                    <TextBlock 
                        Text="Low" 
                        Visibility="{Binding Pin_Low,Converter={StaticResource BooleanToVisibilityConverter}}" 
                        Margin="0,0,5,0"/>
                    <TextBlock 
                        Text="High" 
                        Visibility="{Binding Pin_High,Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
                <Border 
                    Grid.Column="2" 
                    Style="{StaticResource CellBorder}" 
                    BorderThickness="2,0">
                    <TextBlock 
                        Text="{Binding State.OriginValue}" 
                        Style="{StaticResource ValueTextBlockStyle}"
                        Grid.Column="2"/>
                </Border>
                
            </Grid>
            <Border.ToolTip>
                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SignalToolTip}"/>
            </Border.ToolTip>
        </Border>
        
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:NXPSignal}">
        <Border Style="{StaticResource CardBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="SignalName" />
                    <ColumnDefinition Width="auto" SharedSizeGroup="Value" MinWidth="40"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding DisplayName}" Style="{StaticResource SignalNameFontStyle}"/>
                <TextBlock Text="{Binding OriginValue}" Grid.Column="1" Style="{StaticResource ValueTextBlockStyle}"/>
                <!--//<TextBlock Text="{Binding me}"-->
            </Grid>
            <Border.ToolTip>
                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SignalToolTip}"/>
            </Border.ToolTip>
        </Border>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:NXPInputSignal}">
        <Border Style="{StaticResource CardBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" SharedSizeGroup="SignalName" />
                    <ColumnDefinition Width="auto" SharedSizeGroup="Value" MinWidth="40"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource SignalNameFontStyle}" Text="{Binding DisplayName}"/>
                <Border Style="{StaticResource CellBorder}" Grid.Column="1" BorderThickness="2,0">
                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock 
                            Margin="0,0,5,0"
                            Style="{StaticResource ValueTextBlockStyle}"
                            Text="{Binding Value2}" />
                        <TextBlock Text="{Binding Unit}" VerticalAlignment="Center" Foreground="Gray"/>
                    </StackPanel>
                </Border>
            </Grid>
            <Border.ToolTip>
                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SignalToolTip}"/>
            </Border.ToolTip>
        </Border>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:PulseInSignal}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto" MinWidth="120"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Border Style="{StaticResource CellBorder}">
                <TextBlock 
                 Grid.Column="1"
                 Text="{Binding Value1}" 
                 Margin="0,0,5,0"
                 Style="{StaticResource ValueTextBlockStyle}"
                 Foreground="{Binding OutLimits, Converter={StaticResource OutLimitsColorConverter}}"/>
            </Border>
            <StackPanel Grid.Column="0" Margin="0,0,5,0">
                <TextBlock Text="{Binding MaxValue,StringFormat={}{0:f2}}" FontSize="10" Foreground="Gray"/>
                <TextBlock Text="{Binding MinValue,StringFormat={}{0:f2}}" FontSize="10"  Margin="0,3,0,0"/>
                <!--<TextBlock Text="{Binding OutLimits}" FontSize="10"  Margin="0,3,0,0"/>-->
            </StackPanel>
            <StackPanel Grid.Column="2" Margin="5,0,0,0">
                <TextBlock Text="{Binding MaxThreshold}" FontSize="10"/>
                <TextBlock Text="{Binding MinThreshold}" FontSize="10"/>
            </StackPanel>

        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:PulseInSignalGroup}">
        <Border Style="{StaticResource CardBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" SharedSizeGroup="SignalName"/>
                    <ColumnDefinition Width="auto" SharedSizeGroup="Value1" />
                    <ColumnDefinition Width="auto" SharedSizeGroup="Value2" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Style="{StaticResource CellBorder}">
                    <TextBlock Text="{Binding GroupName}" Style="{StaticResource SignalNameFontStyle}"/>
                </Border>
                <ContentControl 
                    Content="{Binding Signal_DC}" 
                    Grid.Column="1" 
                    ContentTemplate="{StaticResource CommonSignal}"
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Center" 
                    ToolTip="Duty Cycle"/>
                <ContentControl 
                    Content="{Binding Signal_Freq}" 
                    Grid.Column="2" 
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Center"
                    ContentTemplate="{StaticResource CommonSignal}"
                    ToolTip="Freq"/>
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:PulseOutGroupSignalGroup}">
        <Border>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="SignalName" Width="auto"></ColumnDefinition>
                    <ColumnDefinition SharedSizeGroup="value1" Width="auto" MinWidth="100"/>
                    <ColumnDefinition SharedSizeGroup="value2" Width="auto" MinWidth="100"/>
                    <ColumnDefinition SharedSizeGroup="note" Width="auto"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border Style="{StaticResource CellBorder}">
                    <TextBlock Text="{Binding GroupName}" Style="{StaticResource SignalNameFontStyle}"/>
                </Border>
                <TextBox 
                    Text="{Binding Freq.TempValue}" 
                    x:Name="freq"
                    Grid.Column="1" 
                    Margin="2,0" 
                    IsEnabled="{Binding CurrentViewEnable}">
                    <TextBox.ToolTip>
                        <ContentControl Content="{Binding Freq}" ContentTemplate="{StaticResource SignalToolTip}"/>
                    </TextBox.ToolTip>
                </TextBox>
                <TextBox 
                    Name="duty"
                    Text="{Binding DutyCycle.TempValue}" 
                    Grid.Column="2"
                    IsEnabled="{Binding CurrentViewEnable}">
                    <TextBox.ToolTip>
                        <ContentControl Content="{Binding DutyCycle}" ContentTemplate="{StaticResource SignalToolTip}"/>
                    </TextBox.ToolTip>
                </TextBox>
                <TextBlock 
                    Text="{Binding Note}" 
                    Grid.Column="3" 
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center"/>
            </Grid>
            <Border.Style>
                <Style TargetType="Border" BasedOn="{StaticResource CardBorder}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentViewEnable}" Value="False">
                            <Setter Property="Background" Value="LightGray"/>
                            <!--<Setter TargetName="freq" Property="IsEnabled" Value="False"/>-->
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentViewEnable}" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type models:DiscreteInputSignalGroup}">
        <GroupBox Header="{Binding GroupName}" Margin="2">
            <ContentControl Content="{Binding Signals}" ContentTemplate="{StaticResource DisInSignals}" Margin="-7"/>
        </GroupBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:DiscreteOutputSignalGroup}">
        <GroupBox Header="{Binding GroupName}" Margin="2">
            <ContentControl Content="{Binding Signals}" ContentTemplate="{StaticResource DisOutSignals}"  Margin="-7"/>
        </GroupBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:PulseInGroupGroup}">
        <GroupBox Header="{Binding GroupName}" Margin="2">
            <ContentControl Content="{Binding Groups}" ContentTemplate="{StaticResource PulseInGroupList}"  Margin="-7"/>
        </GroupBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:TextBoxSignalView}">
        <ctrls:ControlWithTitle Title="{Binding Title}" Orientation="Vertical">
            <ctrls:ControlWithTitle.Content>
                <TextBox Text="{Binding Signal.OriginValue}" />
            </ctrls:ControlWithTitle.Content>
            <ctrls:ControlWithTitle.ToolTip>
                <ContentControl Content="{Binding Signal}" ContentTemplate="{StaticResource SignalToolTip}"/>
            </ctrls:ControlWithTitle.ToolTip>
        </ctrls:ControlWithTitle>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:CommandSignalView}">
        <Button Content="{Binding Title}" Command="{Binding ChangeSignalCommand}">
            <Button.ToolTip>
                <ContentControl Content="{Binding Signal}" ContentTemplate="{StaticResource SignalToolTip}"/>
            </Button.ToolTip>
        </Button>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:PulseOutGroupList}">
        <GroupBox Header="{Binding GroupName}" Margin="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <ContentControl Content="{Binding Groups}" ContentTemplate="{StaticResource PulseOutGroupList}"/>
                <StackPanel Grid.Column="1">
                    <ItemsControl ItemsSource="{Binding SingleSignals}"/>
                    <Button Content="Update" Command="{Binding UpdateCommand}" Visibility="{Binding HasCommand,Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
            </Grid>
        </GroupBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:GDICRegistersGroup}">
        <GroupBox Header="{Binding GroupName}" Margin="2">
            <Grid>
                <DataGrid 
                    ItemsSource="{Binding Signals}" 
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding DisplayName}"/>
                        <!--<DataGridTextColumn Header="Address" Binding="{Binding Address}"/>
                        <DataGridTextColumn Header="Value" Binding="{Binding Value1}"/>-->
                        <DataGridTemplateColumn Header="Address">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border>
                                        <TextBlock Text="{Binding Address}"/>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Fixed}" Value="True">
                                                        <Setter Property="Background" Value="Gray"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn> 
                        <DataGridTemplateColumn Header="Address">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border>
                                        <TextBlock Text="{Binding Value1}"/>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Fixed}" Value="True">
                                                        <Setter Property="Background" Value="Gray"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                    
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <!--<DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Fixed}" Value="True">
                                    <Setter Property="Background" Value="Gray"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>-->
                </DataGrid>
            </Grid>
        </GroupBox>
    </DataTemplate>


    <DataTemplate DataType="{x:Type models:GDICStatuGroupGroup}">
        <GroupBox Header="{Binding GroupName}" Margin="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <ItemsControl 
                                        ItemsSource="{Binding Groups}" 
                                        Grid.Row="1" 
                                        Grid.ColumnSpan="3">
                    <ItemsControl.Resources>
                        <DataTemplate DataType="{x:Type models:GDICStatusDataSignal}">
                            <Border Style="{StaticResource CellBorder}" Margin="0,1" Background="White">
                                <StackPanel Margin="0">
                                    <TextBlock Text="{Binding DisplayName}" Padding="2"/>
                                    <Rectangle Height="2" Margin="0,2" Fill="#f6f6f6"/>
                                    <TextBlock Text="{Binding OriginValue}" Margin="0,2,0,0" Padding="2"/>
                                </StackPanel>
                                <Border.ToolTip>
                                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource SignalToolTip}"/>
                                </Border.ToolTip>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:GDICStatusGroup}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="SignalName" Width="auto"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock 
                                        Text="{Binding}" 
                                        Margin="0,0,5,0" 
                                        Grid.Row="0" 
                                        HorizontalAlignment="Right" 
                                        VerticalAlignment="Center" />

                                <!--Data0~Data9-->
                                <ItemsControl 
                                        ItemsSource="{Binding GDICStatusSignals}" 
                                        Grid.Column="1"
                                        VirtualizingStackPanel.IsVirtualizing="True" 
                                        VirtualizingStackPanel.VirtualizationMode="Recycling">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid Rows="1"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </GroupBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:AnalogSignalGroup}">
        <GroupBox Header="{Binding GroupName}">
            <Grid Margin="-8">
                <Button 
                    Content="Clear" 
                    Width="80"
                    Height="25"
                    Margin="80,-28,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Command="{StaticResource ClearSignalDataCommand}" 
                    CommandParameter="{Binding Signals}">
                </Button>
                <DataGrid ItemsSource="{Binding Signals}" 
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False" IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding DisplayName}" />
                        <DataGridTextColumn Header="ADC Counter" Binding="{Binding OriginValue}" />
                        <DataGridTextColumn Header="AI RAW" Binding="{Binding Value1}" />
                        <DataGridTextColumn Header="AI Scaled" Binding="{Binding Value2}" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </GroupBox>
    </DataTemplate>

    <Style TargetType="{x:Type ctrls:ReadOnlyRadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:ReadOnlyRadioButton}">
                    <StackPanel Orientation="Horizontal">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="14" Height="14">

                                    <Ellipse 
                                        x:Name="Border"
                                        Fill="Transparent"
                                        StrokeThickness="1"
                                        Stroke="Gray" />

                                    <Ellipse x:Name="CheckMark" Margin="4">
                                        <!--<Ellipse.Style>
                                            <Style TargetType="Ellipse">
                                                <Setter Property="Fill" Value="Transparent"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                                        <Setter Property="Fill" Value="Black"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsChecked}" Value="False">
                                                        <Setter Property="Fill" Value="Transparent"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Ellipse.Style>-->
                                    </Ellipse>

                                </Grid>
                            </BulletDecorator.Bullet>
                        </BulletDecorator>

                        <TextBlock Text="{TemplateBinding Title}" Margin="5,0"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Fill" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Fill" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked}"
        </Style.Triggers>-->
    </Style>
</ResourceDictionary>
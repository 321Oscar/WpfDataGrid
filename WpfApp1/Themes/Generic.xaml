<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrls="clr-namespace:WpfApp1.Components"
    xmlns:cvts="clr-namespace:WpfApp1.Converters"
    xmlns:viewModels="clr-namespace:WpfApp1.ViewModels"
    xmlns:models="clr-namespace:WpfApp1.Models"
    xmlns:views="clr-namespace:WpfApp1.Views">
    <DataTemplate DataType="{x:Type viewModels:DeviceViewModel}">
        <views:DevicesView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:AnalogViewModel}">
        <views:AnalogView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:DiscreteViewModel}">
        <views:DiscreteView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:PulseInViewModel}">
        <views:PulseInView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:PulseOutViewModel}">
        <views:PulseOutView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:GDICViewModel}">
        <views:GDIC3160View />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:LogViewModel}">
        <views:LogView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:MemoryViewModel}">
        <views:MemoryView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:NXPViewModel}">
        <views:NXPView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:PPAWLViewModel}">
        <views:PPAWLView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:SavinLogicViewModel}">
        <views:SavingLogicView />
    </DataTemplate> 
    <DataTemplate DataType="{x:Type viewModels:SPIViewModel}">
        <views:SPIView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:NXPFlashViewModel}">
        <views:NXPFlashView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:ResolverViewModel}">
        <views:ResolverView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:UDSUpgradeViewModel}">
        <views:UDSUpgradeView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:LayoutViewModel}">
        <ctrls:Layout />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:AnalogSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:DiscreteInputSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:DiscreteOutputSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:PulseOutSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:NXPSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate>
    <DataTemplate DataType="{x:Type viewModels:NXPInputSignalLocatorViewModel}">
        <views:SignalLocatorView />
    </DataTemplate>
    <Style x:Key="CardBorder" TargetType="Border">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>
    <Style x:Key="CellBorder" TargetType="Border">
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="BorderBrush" Value="#f6f6f6"/>
        <Setter Property="BorderThickness" Value="0,0,2,0"/>
    </Style>
    <Style x:Key="SignalNameFontStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style x:Key="DescriptionTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="2,0,0,0"/>
    </Style>
    <Style x:Key="ValueTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <DataTemplate DataType="{x:Type models:SignalBase}">
        <TextBlock Text="{Binding DisplayName}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:AnalogSignal}">
        <Border Style="{StaticResource CardBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" SharedSizeGroup="SignalName" MinWidth="100"/>
                    <ColumnDefinition Width="auto" SharedSizeGroup="value2" MinWidth="100"/>
                    <ColumnDefinition Width="auto" SharedSizeGroup="value1" MinWidth="100"/>
                    <ColumnDefinition Width="auto" SharedSizeGroup="valueStad" MinWidth="100"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Style="{StaticResource CellBorder}">
                    <Grid Grid.Column="0" ToolTip="{Binding DisplayName}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding DisplayName}" Style="{StaticResource SignalNameFontStyle}"/>
                        <StackPanel Grid.Column="1">
                            <TextBlock Text="{Binding PinNumber}" Style="{StaticResource DescriptionTextBlockStyle}"/>
                            <TextBlock Text="{Binding ADChannel}" Style="{StaticResource DescriptionTextBlockStyle}"/>
                        </StackPanel>
                    </Grid>
                </Border>
                <!-- AI Raw & AI Scaled-->
                <Border Style="{StaticResource CellBorder}" Grid.Column="1" >
                    <TextBlock
                                            Style="{StaticResource ValueTextBlockStyle}"
                                            
                                            Text="{Binding Value2}" 
                                            ToolTip="AI Scaled"/>
                </Border>
                <Border Style="{StaticResource CellBorder}" Grid.Column="2" >
                    <Grid HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock 
                                                Margin="0,0,5,0"
                                                Style="{StaticResource ValueTextBlockStyle}"
                                                Text="{Binding Value1}" 
                                                Foreground="{Binding OutLimits, Converter={StaticResource OutLimitsColorConverter}}"/>
                        <StackPanel Grid.Column="1" >
                            <TextBlock Text="Min/Max:" FontSize="10" />
                            <TextBlock Text="Threshold:" FontSize="10"  Margin="0,3,0,0"/>
                        </StackPanel>
                        <StackPanel Grid.Column="2" Margin="5,0,0,0">
                            <StackPanel Orientation="Horizontal" >
                                <TextBlock Text="{Binding MinValue,StringFormat={}{0:f2}}" FontSize="10"/>
                                <TextBlock Text="--"/>
                                <TextBlock Text="{Binding MaxValue,StringFormat={}{0:f2}}" FontSize="10"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" >
                                <TextBlock Text="{Binding MinThreshold}" FontSize="10"/>
                                <TextBlock Text="--"/>
                                <TextBlock Text="{Binding MaxThreshold}" FontSize="10"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Border>
                <!-- Standard -->
                <TextBlock
                                            Margin="5,0,5,0"
                                            Grid.Column="3" 
                                            Text="{Binding StandardDev,StringFormat={}{0:F2}}" 
                                            Style="{StaticResource ValueTextBlockStyle}" 
                                            ToolTip="StandardDev"/>
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:DiscreteInputSignal}">
        <Border Style="{StaticResource CardBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" SharedSizeGroup="SignalName"/>
                    <ColumnDefinition Width="auto" MinWidth="100"/>
                    <ColumnDefinition Width="auto" MinWidth="100"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!--<Border Style="{StaticResource CellBorder}" Grid.Column="0" >-->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource SignalNameFontStyle}" Text="{Binding DisplayName}"/>
                        <TextBlock 
                         Style="{StaticResource DescriptionTextBlockStyle}"
                         Text="{Binding PinNumber}"
                         Grid.Column="1"/>
                    </Grid>
                <!--</Border>-->
                <!--<Border Style="{StaticResource CellBorder}" Grid.Column="1" >-->
                    <TextBlock 
                        Grid.Column="1"
                    Text="{Binding OriginValue}" 
                    Style="{StaticResource ValueTextBlockStyle}"/>
                <!--</Border>
                <Border Style="{StaticResource CellBorder}" Grid.Column="2" >-->
                    <TextBlock 
                         Grid.Column="2"
                    Text="{Binding Transitions}" 
                    Style="{StaticResource ValueTextBlockStyle}" 
                    ToolTip="Transitions"/>
                <!--</Border>-->
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:DiscreteOutputSignal}">
        <Border Style="{StaticResource CardBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" SharedSizeGroup="SignalName"/>
                    <ColumnDefinition Width="auto" SharedSizeGroup="Value" MinWidth="40"/>
                    <ColumnDefinition Width="auto" MinWidth="40"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Style="{StaticResource SignalNameFontStyle}"
                         Text="{Binding DisplayName}"/>
                    <TextBlock 
                         Style="{StaticResource DescriptionTextBlockStyle}"
                         Text="{Binding PinNumber}"
                         Grid.Column="1"/>
                </Grid>
                <StackPanel
                    Margin="5,0,0,0"
                    Grid.Column="1" 
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Center" 
                    Orientation="Horizontal">
                    <CheckBox 
                        IsChecked="{Binding Pin_High, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        Content="Pin__High"/>
                    <CheckBox 
                        Margin="5,0,0,0"
                        IsChecked="{Binding Pin_Low, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        Content="Pin__Low"/>
                </StackPanel>

                <TextBlock 
                    Text="{Binding State.OriginValue}" 
                    Style="{StaticResource ValueTextBlockStyle}"
                    Grid.Column="2"/>
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:NXPSignal}">
        <Border Style="{StaticResource CardBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="SignalName" />
                    <ColumnDefinition Width="auto" SharedSizeGroup="Value" MinWidth="40"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding DisplayName}" Style="{StaticResource SignalNameFontStyle}"/>
                <TextBlock Text="{Binding OriginValue}" Grid.Column="1" Style="{StaticResource ValueTextBlockStyle}"/>
                <!--//<TextBlock Text="{Binding me}"-->
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate DataType="{x:Type models:NXPInputSignal}">
        <Border Style="{StaticResource CardBorder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" SharedSizeGroup="SignalName" />
                    <ColumnDefinition Width="auto" SharedSizeGroup="Value" MinWidth="40"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource SignalNameFontStyle}" Text="{Binding DisplayName}"/>
                <TextBlock Grid.Column="1"
                           Text="{Binding Value2}" 
                           Style="{StaticResource ValueTextBlockStyle}"/>
            </Grid>
        </Border>
    </DataTemplate>

    <Style TargetType="{x:Type ctrls:Modal}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:Modal}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}" Visibility="{TemplateBinding IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Border
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            UseLayoutRounding="True">
                            <Grid>
                                <Grid.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=border}" />
                                </Grid.OpacityMask>
                                <Border
                                    x:Name="border"
                                    Background="White"
                                    CornerRadius="5" />
                                <ContentControl Content="{TemplateBinding Content}" />
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    ShadowDepth="10"
                                    Color="Gray" />
                            </Border.Effect>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel>
                        <Grid>
                            <CheckBox
                                x:Name="ToggleButton"
                                Content="{TemplateBinding Content}"
                                IsChecked="{Binding RelativeSource={RelativeSource AncestorType=CheckBox}, Path=IsChecked}" />
                        </Grid>
                        <TextBlock
                            x:Name="StatusTextBlock"
                            Margin="18,0,0,0"
                            FontSize="{TemplateBinding FontSize}"
                            Text="Unchecked" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="StatusTextBlock" Property="Text" Value="High" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="StatusTextBlock" Property="Text" Value="Low" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <cvts:OutLimitsColorConverter x:Key="OutLimitsColorConverter" />
    <cvts:DoubleBooleanConverter x:Key="DoubleBooleanConverter"/>
    <cvts:BooleanInvertVisibilityConverter x:Key="BooleanInvertVisibilityConverter"/>

    <Style x:Key="NormalCombox" TargetType="ComboBox">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="labelText" TargetType="TextBlock">
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="NormalCheckBox" TargetType="CheckBox">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="numTextBox" TargetType="TextBox">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="MinWidth" Value="80"/>
    </Style>
    <Style TargetType="Button" x:Key="topButton">
        <Setter Property="Margin" Value="5,5,5,0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="Button" x:Key="NormalButton">
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TitleLabel" TargetType="TextBlock">
        <!--
         Margin="10,5,0,0"
            FontSize="24"
        -->
        <Setter Property="Margin" Value="10,5,0,0"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="CheckBoxStyle_LowHigh_Horizontal" TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Grid>
                            <CheckBox
                                    x:Name="ToggleButton"
                                    Content="{TemplateBinding Content}"
                                    IsChecked="{Binding RelativeSource={RelativeSource AncestorType=CheckBox}, Path=IsChecked}" />
                        </Grid>
                        <TextBlock
                                x:Name="StatusTextBlock"
                                Margin="0,0,0,0"
                                FontSize="{TemplateBinding FontSize}"
                                Text="Unchecked" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="StatusTextBlock" Property="Text" Value="High" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="StatusTextBlock" Property="Text" Value="Low" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NumberUpDownStyle" TargetType="{x:Type Slider}" >
        <Style.Resources>
            <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Width" Value="20" />
            </Style>
        </Style.Resources>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="SmallChange" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.RowSpan="2" Height="Auto"
                                Margin="0" Padding="0"
                                VerticalAlignment="Stretch" VerticalContentAlignment="Center"
                                Text="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
                            <TextBox.InputBindings>
                                <KeyBinding Gesture="Up" Command="{x:Static Slider.IncreaseSmall}" />
                                <KeyBinding Gesture="Down" Command="{x:Static Slider.DecreaseSmall}" />
                                <KeyBinding Gesture="PageUp" Command="{x:Static Slider.IncreaseLarge}" />
                                <KeyBinding Gesture="PageDown" Command="{x:Static Slider.DecreaseLarge}" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <RepeatButton Grid.Row="0" Grid.Column="1"
                                    Command="{x:Static Slider.IncreaseSmall}"
                                    Style="{StaticResource RepeatButtonStyle}">
                            <Path Data="M4,0 L0,4 8,4 Z" Fill="Black" />
                        </RepeatButton>
                        <RepeatButton Grid.Row="1" Grid.Column="1"
                                    Command="{x:Static Slider.DecreaseSmall}"
                                    Style="{StaticResource RepeatButtonStyle}">
                            <Path Data="M0,0 L4,4 8,0 Z" Fill="Black" />
                        </RepeatButton>
                        <Border x:Name="TrackBackground" Visibility="Collapsed">
                            <Rectangle x:Name="PART_SelectionRange" Visibility="Collapsed" />
                        </Border>
                        <Thumb x:Name="Thumb" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:TextBoxWithLabel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:TextBoxWithLabel}">
                    <StackPanel Orientation="{TemplateBinding Orientation}">
                        <TextBlock Text="{TemplateBinding Title}" 
                                   FontWeight="Bold" 
                                   VerticalAlignment="Center" 
                                   Margin="0,0,10,0"/>

                        <TextBlock Text="{TemplateBinding Content}" 
                                   VerticalAlignment="Center"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBlockWithLabelGridStyle" TargetType="{x:Type ctrls:TextBoxWithLabel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:TextBoxWithLabel}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" SharedSizeGroup="title"/>
                            <ColumnDefinition Width="auto" SharedSizeGroup="content"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{TemplateBinding Title}" 
                                   FontWeight="Bold" 
                                   VerticalAlignment="Center" 
                                   Margin="0,0,10,0"
                                   Grid.Column="0"/>

                        <TextBlock Text="{TemplateBinding Content}" 
                                   VerticalAlignment="Center"
                                   Grid.Column="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBoxWithLabelStackStyle" TargetType="{x:Type ctrls:TextBoxWithLabel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:TextBoxWithLabel}">
                    <StackPanel Orientation="{TemplateBinding Orientation}">
                        
                        <TextBlock Text="{TemplateBinding Title}" 
                                   FontWeight="Bold" 
                                   VerticalAlignment="Center" 
                                   Margin="0,0,10,0"
                                   Grid.Column="0"/>

                        <TextBox Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                 Grid.Column="1"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxWithLabelGridStyle" TargetType="{x:Type ctrls:TextBoxWithLabel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:TextBoxWithLabel}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" SharedSizeGroup="title"/>
                            <ColumnDefinition Width="auto" SharedSizeGroup="content"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{TemplateBinding Title}" 
                                   FontWeight="Bold" 
                                   VerticalAlignment="Center" 
                                   Margin="0,0,10,0"
                                   Grid.Column="0"/>

                        <TextBox Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                 Width="80" Grid.Column="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:ControlWithTitle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:ControlWithTitle}">
                    <StackPanel Orientation="{TemplateBinding Orientation}">
                        <TextBlock Text="{TemplateBinding Title}" 
                                   FontWeight="Bold" 
                                   VerticalAlignment="Center" 
                                   Margin="0,0,10,0"/>

                        <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ControlWithTitleGridStyle" TargetType="{x:Type ctrls:ControlWithTitle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:ControlWithTitle}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" SharedSizeGroup="title"/>
                            <ColumnDefinition Width="auto" SharedSizeGroup="content"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{TemplateBinding Title}" 
                                   FontWeight="Bold" 
                                   VerticalAlignment="Center" 
                                   Margin="0,0,10,0"
                                   Grid.Column="0"/>

                        <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrls="clr-namespace:ERad5TestGUI.Components"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
    xmlns:local="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
    xmlns:extensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:converters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI">

    <Style x:Key="CardBorder" TargetType="Border">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>
    <Style x:Key="CellBorder" TargetType="Border">
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="BorderBrush" Value="#f6f6f6"/>
        <Setter Property="BorderThickness" Value="0,0,2,0"/>
    </Style> 
    <Style x:Key="CellBorderHor" TargetType="Border">
        <Setter Property="Padding" Value="4,4"/>
        <Setter Property="BorderBrush" Value="#f6f6f6"/>
        <Setter Property="BorderThickness" Value="0,2,0,0"/>
    </Style>
    <Style x:Key="SignalNameFontStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style x:Key="DescriptionTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="2,0,0,0"/>
    </Style>
    <Style x:Key="ValueTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type ctrls:Modal}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:Modal}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}" Visibility="{TemplateBinding IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Border
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            UseLayoutRounding="True">
                            <Grid>
                                <Grid.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=border}" />
                                </Grid.OpacityMask>
                                <Border
                                    x:Name="border"
                                    Background="White"
                                    CornerRadius="5" />
                                <ContentControl Content="{TemplateBinding Content}" />
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    ShadowDepth="10"
                                    Color="Gray" />
                            </Border.Effect>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel>
                        <Grid>
                            <CheckBox
                                x:Name="ToggleButton"
                                Content="{TemplateBinding Content}"
                                IsChecked="{Binding RelativeSource={RelativeSource AncestorType=CheckBox}, Path=IsChecked}" />
                        </Grid>
                        <TextBlock
                            x:Name="StatusTextBlock"
                            Margin="18,0,0,0"
                            FontSize="{TemplateBinding FontSize}"
                            Text="Unchecked" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="StatusTextBlock" Property="Text" Value="High" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="StatusTextBlock" Property="Text" Value="Low" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NormalCombox" TargetType="ComboBox">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="labelText" TargetType="TextBlock">
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="NormalCheckBox" TargetType="CheckBox">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="numTextBox" TargetType="TextBox">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="MinWidth" Value="80"/>
    </Style>
    <Style TargetType="Button" x:Key="topButton">
        <Setter Property="Margin" Value="5,5,5,0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="Button" x:Key="NormalButton">
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TitleLabel" TargetType="TextBlock">
        <!--
         Margin="10,5,0,0"
            FontSize="24"
        -->
        <Setter Property="Margin" Value="10,5,0,0"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="CheckBoxStyle_LowHigh_Horizontal" TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Grid>
                            <CheckBox
                                    x:Name="ToggleButton"
                                    Content="{TemplateBinding Content}"
                                    IsChecked="{Binding RelativeSource={RelativeSource AncestorType=CheckBox}, Path=IsChecked}" />
                        </Grid>
                        <TextBlock
                                x:Name="StatusTextBlock"
                                Margin="0,0,0,0"
                                FontSize="{TemplateBinding FontSize}"
                                Text="Unchecked" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="StatusTextBlock" Property="Text" Value="High" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="StatusTextBlock" Property="Text" Value="Low" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NumberUpDownStyle" TargetType="{x:Type Slider}" >
        <Style.Resources>
            <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Width" Value="20" />
            </Style>
        </Style.Resources>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="SmallChange" Value="1" />
        <Setter Property="Padding" Value="2,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.RowSpan="2" Height="Auto"
                                Margin="0" Padding="{TemplateBinding Padding}"
                                VerticalAlignment="Stretch" VerticalContentAlignment="Center"
                                Text="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
                            <TextBox.InputBindings>
                                <KeyBinding Gesture="Up" Command="{x:Static Slider.IncreaseSmall}" />
                                <KeyBinding Gesture="Down" Command="{x:Static Slider.DecreaseSmall}" />
                                <KeyBinding Gesture="PageUp" Command="{x:Static Slider.IncreaseLarge}" />
                                <KeyBinding Gesture="PageDown" Command="{x:Static Slider.DecreaseLarge}" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <RepeatButton 
                            Grid.Row="0" 
                            Grid.Column="1"
                            Command="{x:Static Slider.IncreaseSmall}"
                            Style="{StaticResource RepeatButtonStyle}">
                            <Path Data="M4,0 L0,4 8,4 Z" Fill="Black" />
                        </RepeatButton>
                        <RepeatButton 
                            Grid.Row="1" 
                            Grid.Column="1"
                            Command="{x:Static Slider.DecreaseSmall}"
                            Style="{StaticResource RepeatButtonStyle}">
                            <Path Data="M0,0 L4,4 8,0 Z" Fill="Black" />
                        </RepeatButton>
                        <Border x:Name="TrackBackground" Visibility="Collapsed">
                            <Rectangle x:Name="PART_SelectionRange" Visibility="Collapsed" />
                        </Border>
                        <Thumb x:Name="Thumb" Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:TextBoxWithLabel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:TextBoxWithLabel}">
                    <StackPanel Orientation="{TemplateBinding Orientation}">
                        <TextBlock Text="{TemplateBinding Title}" 
                                   FontWeight="Bold" 
                                   VerticalAlignment="Center" 
                                   Margin="0,0,10,0"/>

                        <TextBlock Text="{TemplateBinding Content}" 
                                   VerticalAlignment="Center"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBlockWithLabelGridStyle" TargetType="{x:Type ctrls:TextBoxWithLabel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:TextBoxWithLabel}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" SharedSizeGroup="title"/>
                            <ColumnDefinition Width="auto" SharedSizeGroup="content"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{TemplateBinding Title}" 
                                   FontWeight="Bold" 
                                   VerticalAlignment="Center" 
                                   Margin="0,0,10,0"
                                   Grid.Column="0"/>

                        <TextBlock Text="{TemplateBinding Content}" 
                                   VerticalAlignment="Center"
                                   Grid.Column="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBoxWithLabelStackStyle" TargetType="{x:Type ctrls:TextBoxWithLabel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:TextBoxWithLabel}">
                    <StackPanel Orientation="{TemplateBinding Orientation}">

                        <TextBlock Text="{TemplateBinding Title}" 
                                   FontWeight="Bold" 
                                   VerticalAlignment="Center" 
                                   Margin="0,0,10,0"
                                   Grid.Column="0"/>

                        <TextBox Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                 Grid.Column="1"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxWithLabelGridStyle" TargetType="{x:Type ctrls:TextBoxWithLabel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:TextBoxWithLabel}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" SharedSizeGroup="title"/>
                            <ColumnDefinition Width="auto" SharedSizeGroup="content"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{TemplateBinding Title}" 
                                   FontWeight="Bold" 
                                   VerticalAlignment="Center" 
                                   Margin="0,0,10,0"
                                   Grid.Column="0"/>

                        <TextBox Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                 MinWidth="80" Grid.Column="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:ControlWithTitle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:ControlWithTitle}">
                    <StackPanel Orientation="{TemplateBinding Orientation}">
                        <TextBlock Text="{TemplateBinding Title}" 
                                   FontWeight="Bold" 
                                   VerticalAlignment="Center" 
                                   Margin="0,0,10,0" 
                                   TextWrapping="Wrap"/>

                        <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ControlWithTitleGridStyle" TargetType="{x:Type ctrls:ControlWithTitle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:ControlWithTitle}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" SharedSizeGroup="title"/>
                            <ColumnDefinition Width="*" SharedSizeGroup="content"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock 
                            Text="{TemplateBinding Title}" 
                            FontWeight="Bold" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Right"
                            Margin="0,0,10,0"
                            Grid.Column="0"/>

                        <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="LoadPanel">
        <Grid Panel.ZIndex="99">
            <Grid.Style>
                <Style TargetType="FrameworkElement">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLoading}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Border Background="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}"
                                    Opacity="0.5"/>

            <ContentControl 
                ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.LoadingCircle}}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="{adonisUi:Space 5}"
                Height="{adonisUi:Space 5}"
                Focusable="False"/>
        </Grid>
    </DataTemplate>

</ResourceDictionary>